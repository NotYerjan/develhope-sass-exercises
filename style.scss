@use "colors.scss" as c;
@use "functions.scss" as f;
@use "sass:color";

div {
  border: f.rem(1) solid c.$color-one;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  padding: f.rem(10);

  h1 {
    max-width: fit-content;
    color: c.$color-two;
    border-bottom: f.rem(1) solid c.$color-three;
  }

  h2 {
    @extend h1;
    padding: f.rem(16);
    border: f.rem(1) solid c.$color-one;
  }

  @mixin article-box(
    $text-color: c.$color-three,
    $border-color: c.$color-two,
    $font-size: f.rem(16)
  ) {
    flex: 1;
    padding: f.rem(20) f.rem(10);
    border: f.rem(1) solid $border-color;
    color: $text-color;
    font-size: $font-size;
  }
  section {
    display: flex;

    article {
      @include article-box;

      &:nth-of-type(even) {
        @include article-box(c.$color-one);
      }
    }

    &:nth-of-type(2) {
      margin-top: f.rem(10);

      article {
        @include article-box(c.$color-two, c.$color-three, f.rem(24));
      }
    }
  }
}

$sizes: 1rem, 2rem, 3rem;

.numbers {
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  margin: 10px;

  @each $size in $sizes {
    .fs-#{$size} {
      font-size: $size;
    }
  }

  div {
    border: 1px solid c.$color-one;
    width: 45px;
    height: 45px;
    padding: 0;
    align-items: flex-start;

    @for $i from 1 through 19 {
      &:nth-of-type(#{$i}) {
        @if $i == 10 {
          color: c.$color-one;
          background-color: c.$color-three;
        } @else {
          color: color.adjust(c.$black, $lightness: calc($i * (5%)));
          background-color: color.adjust(
            c.$white,
            $lightness: calc($i * (-5%))
          );
        }
      }
    }
  }
}
